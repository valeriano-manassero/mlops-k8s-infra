apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: agentservices
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: trains-server
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  name: agentservices
  namespace: {{ .Values.trains.namespace }}
spec:
  selector:
    matchLabels:
          app.kubernetes.io/name: agentservices
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/part-of: trains-server
          app.kubernetes.io/managed-by: {{ .Release.Service }}
  minReadySeconds: 20
  progressDeadlineSeconds: 30
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
          app.kubernetes.io/name: agentservices
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/part-of: trains-server
          app.kubernetes.io/managed-by: {{ .Release.Service }}
          helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
                - matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - trains
      containers:
      - image: allegroai/trains-agent-services:latest
        name: agentservices
        securityContext:
          privileged: true
        volumeMounts:
          - name: dockersock
            mountPath: "/var/run/docker.sock"
          - name: agent-data
            mountPath: /root/.trains
        env:
          - name: TRAINS_HOST_IP
            value: {{ .Values.agentservices.trainsHostIp }}
          - name: TRAINS_API_HOST
            value: {{ .Values.agentservices.trainsApiHost }}
          - name: TRAINS_WEB_HOST
            value: {{ .Values.agentservices.trainsWebHost }}
          - name: TRAINS_FILES_HOST
            value: {{ .Values.agentservices.trainsFilesHost }}
          - name: TRAINS_AGENT_GIT_USER
            value: {{ .Values.agentservices.trainsGitUser }}
          - name: TRAINS_AGENT_GIT_PASS
            value: {{ .Values.agentservices.trainsGitPassword }}
          - name: TRAINS_API_ACCESS_KEY
            value: {{ .Values.agentservices.trainsAccessKey }}
          - name: TRAINS_API_SECRET_KEY
            value: {{ .Values.agentservices.trainsSecretKey }}
          - name: TRAINS_AGENT_UPDATE_VERSION
            value: {{ .Values.agentservices.agentVersion }}
          - name: TRAINS_AGENT_DEFAULT_BASE_DOCKER
            value: {{ .Values.agentservices.defaultBaseDocker }}
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.agentservices.awsAccessKeyId }}
          - name: AWS_SECRET_ACCESS_KEY
            value: {{ .Values.agentservices.awsSecretAccessKey }}
          - name: AWS_DEFAULT_REGION
            value: {{ .Values.agentservices.awsDefaultRegion }}
          - name: AZURE_STORAGE_ACCOUNT
            value: {{ .Values.agentservices.azureStorageAccount }}
          - name: AZURE_STORAGE_KEY
            value: {{ .Values.agentservices.azureStorageKey }}
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: {{ .Values.agentservices.googleCredentials }}
          - name: TRAINS_WORKER_ID
            value: {{ .Values.agentservices.trainsWorkerId }}
          - name: TRAINS_AGENT_DOCKER_HOST_MOUNT
            value: {{ .Values.agentservices.trainsDockerHostMount }}
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: agent-data
        hostPath:
          path: /opt/trains/agent
      restartPolicy: Always
      nodeSelector:
        {{ .Values.trains.nodeSelector }}
