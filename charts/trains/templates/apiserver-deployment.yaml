apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.services.apiserver.name}}
  labels:
    app.kubernetes.io/name: apiserver
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: trains-server
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Values.trains.image.tag }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  namespace: {{ .Values.trains.namespace }}
spec:
  selector:
    app.kubernetes.io/name: apiserver
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: trains-server
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  type: NodePort
  ports:
  - protocol: TCP
    port: 8008
    targetPort: 8008
    nodePort: {{ .Values.services.apiserver.nodePort }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: apiserver
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: trains-server
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Values.trains.image.tag }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  name: apiserver
  namespace: {{ .Values.trains.namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: apiserver
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/part-of: trains-server
      app.kubernetes.io/managed-by: {{ .Release.Service }}
  minReadySeconds: 20
  progressDeadlineSeconds: 30
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apiserver
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/part-of: trains-server
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/version: {{ .Values.trains.image.tag }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - trains
      containers:
      - image: {{ .Values.trains.image.repository }}:{{ .Values.trains.image.tag }}
        name: apiserver
        resources:
        {{- with .Values.apiserver.resources }}
            {{- toYaml . | nindent 12 }}
        {{- end }}
        env:
        - name: TRAINS_ELASTIC_SERVICE_HOST
          value: {{ .Values.apiserver.elasticServiceName }}
        - name: TRAINS_ELASTIC_SERVICE_PORT
          value: "{{ .Values.apiserver.elasticServicePort }}"
        - name: TRAINS_MONGODB_SERVICE_HOST
          value: {{ .Values.apiserver.mongoServiceName }}
        - name: TRAINS_MONGODB_SERVICE_PORT
          value: "{{ .Values.apiserver.mongoServicePort }}"
        - name: TRAINS_REDIS_SERVICE_HOST
          value: {{ .Values.apiserver.redisServiceName }}
        - name: TRAINS_REDIS_SERVICE_PORT
          value: "{{ .Values.apiserver.redisServicePort }}"
        - name: TRAINS__apiserver__mongo__pre_populate__enabled
          value: "{{ .Values.apiserver.mongoPrepopulateEnabled }}"
        - name: TRAINS__apiserver__mongo__pre_populate__zip_file
          value: "{{ .Values.apiserver.mongoPrepopulateZipFile }}"
        - name: TRAINS_SERVER_DEPLOYMENT_TYPE
          value: {{ .Values.apiserver.deploymentType }}
        {{- if .Values.use_secrets_flexvolume }}
        - name: TRAINS_CONFIG_DIR
          value: /opt/trains/config:/opt/trains/secrets
        {{- else }}
        - name: TRAINS_CONFIG_DIR
          value: /opt/trains/config
        {{- end }}
        args:
        - apiserver
        volumeMounts:
        {{- if .Values.use_secrets_flexvolume }}
            - mountPath: /opt/trains/secrets
              name: apiserver-azurekeyvault
        {{- end }}
        {{- with .Values.apiserver.volumeMounts }}
            {{- toYaml . | nindent 12 }}
        {{- end }}
      restartPolicy: Always
      nodeSelector:
        {{ .Values.trains.nodeSelector}}
      volumes:
      {{- if .Values.use_secrets_flexvolume }}
        - name: apiserver-azurekeyvault
          flexVolume:
            driver: "azure/kv"
            secretRef:
                name: {{ .Values.fv.secretRef }}
            options:
                usepodidentity: "{{ .Values.fv.usepodidentity }}"
                resourcegroup: "{{ .Values.fv.resourcegroup }}"
                keyvaultname: "{{ .Values.fv.keyvaultname }}"
                keyvaultobjectnames: "{{ .Values.fv.keyvaultobjectnames }}"
                keyvaultobjectaliases: "{{ .Values.fv.keyvaultobjectaliases }}"
                keyvaultobjecttypes: "{{ .Values.fv.keyvaultobjecttypes }}"
                subscriptionid: "{{ .Values.fv.subscriptionid }}"
                tenantid: "{{ .Values.fv.tenantid }}"
      {{- end }}
      {{- with .Values.apiserver.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
